export var LexerTokenType;
(function (LexerTokenType) {
    LexerTokenType["Fix"] = "fix";
    LexerTokenType["For"] = "for";
    LexerTokenType["Fun"] = "fun";
    LexerTokenType["Mut"] = "mut";
    LexerTokenType["Ret"] = "ret";
    LexerTokenType["Wil"] = "wil";
    LexerTokenType["Number"] = "Number";
    LexerTokenType["String"] = "String";
    LexerTokenType["Identifier"] = "Identifier";
    LexerTokenType["Modulus"] = "%";
    LexerTokenType["Multiply"] = "*";
    LexerTokenType["Plus"] = "+";
    LexerTokenType["Minus"] = "-";
    LexerTokenType["Divide"] = "/";
    LexerTokenType["Increment"] = "++";
    LexerTokenType["Decrement"] = "--";
    LexerTokenType["Assignment"] = "=";
    LexerTokenType["ModulusEquals"] = "%=";
    LexerTokenType["MultiplyEquals"] = "*=";
    LexerTokenType["PlusEquals"] = "+=";
    LexerTokenType["MinusEquals"] = "-=";
    LexerTokenType["DivideEquals"] = "/=";
    LexerTokenType["LessThan"] = "<";
    LexerTokenType["LessThanOrEqual"] = "<=";
    LexerTokenType["Equality"] = "==";
    LexerTokenType["GreaterThan"] = ">";
    LexerTokenType["GreaterThanOrEqual"] = ">=";
    LexerTokenType["Dot"] = ".";
    LexerTokenType["Comma"] = ",";
    LexerTokenType["Colon"] = ":";
    LexerTokenType["Semicolon"] = ";";
    LexerTokenType["SingleQuote"] = "'";
    LexerTokenType["DoubleQuote"] = "\"";
    LexerTokenType["LeftRoundBracket"] = "(";
    LexerTokenType["RightRoundBracket"] = ")";
    LexerTokenType["LeftCurlyBracket"] = "{";
    LexerTokenType["RightCurlyBracket"] = "}";
    LexerTokenType["LeftSquareBracket"] = "[";
    LexerTokenType["RightSquareBracket"] = "]";
})(LexerTokenType || (LexerTokenType = {}));
